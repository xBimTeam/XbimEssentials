// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc2x3.Kernel;
using Xbim.Ifc2x3.TimeSeriesResource;
using Xbim.Ifc2x3.DateTimeResource;
using System;
using System.Collections.Generic;
using System.Linq;
using Xbim.Common;
using Xbim.Common.Exceptions;
using Xbim.Ifc2x3.Interfaces;
using Xbim.Ifc2x3.ControlExtension;
//## Custom using statements
//##

namespace Xbim.Ifc2x3.Interfaces
{
	/// <summary>
    /// Readonly interface for IfcTimeSeriesSchedule
    /// </summary>
	// ReSharper disable once PartialTypeWithSinglePart
	public partial interface @IIfcTimeSeriesSchedule : IIfcControl
	{
		IEnumerable<IIfcDateTimeSelect> @ApplicableDates { get; }
		IfcTimeSeriesScheduleTypeEnum @TimeSeriesScheduleType { get; }
		IIfcTimeSeries @TimeSeries { get; }
	
	}
}

namespace Xbim.Ifc2x3.ControlExtension
{
	[ExpressType("IfcTimeSeriesSchedule", 712)]
	// ReSharper disable once PartialTypeWithSinglePart
	public  partial class @IfcTimeSeriesSchedule : IfcControl, IInstantiableEntity, IIfcTimeSeriesSchedule, IEquatable<@IfcTimeSeriesSchedule>
	{
		#region IIfcTimeSeriesSchedule explicit implementation
		IEnumerable<IIfcDateTimeSelect> IIfcTimeSeriesSchedule.ApplicableDates { get { return @ApplicableDates; } }	
		IfcTimeSeriesScheduleTypeEnum IIfcTimeSeriesSchedule.TimeSeriesScheduleType { get { return @TimeSeriesScheduleType; } }	
		IIfcTimeSeries IIfcTimeSeriesSchedule.TimeSeries { get { return @TimeSeries; } }	
		 
		#endregion

		//internal constructor makes sure that objects are not created outside of the model/ assembly controlled area
		internal IfcTimeSeriesSchedule(IModel model) : base(model) 		{ 
			Model = model; 
			_applicableDates = new OptionalItemSet<IfcDateTimeSelect>( this, 0,  6);
		}

		#region Explicit attribute fields
		private OptionalItemSet<IfcDateTimeSelect> _applicableDates;
		private IfcTimeSeriesScheduleTypeEnum _timeSeriesScheduleType;
		private IfcTimeSeries _timeSeries;
		#endregion
	
		#region Explicit attribute properties
		[EntityAttribute(6, EntityAttributeState.Optional, EntityAttributeType.List, EntityAttributeType.Class, 1, -1, 12)]
		public OptionalItemSet<IfcDateTimeSelect> @ApplicableDates 
		{ 
			get 
			{
				if(ActivationStatus != ActivationStatus.NotActivated) return _applicableDates;
				((IPersistEntity)this).Activate(false);
				return _applicableDates;
			} 
		}	
		[EntityAttribute(7, EntityAttributeState.Mandatory, EntityAttributeType.Enum, EntityAttributeType.None, -1, -1, 13)]
		public IfcTimeSeriesScheduleTypeEnum @TimeSeriesScheduleType 
		{ 
			get 
			{
				if(ActivationStatus != ActivationStatus.NotActivated) return _timeSeriesScheduleType;
				((IPersistEntity)this).Activate(false);
				return _timeSeriesScheduleType;
			} 
			set
			{
				SetValue( v =>  _timeSeriesScheduleType = v, _timeSeriesScheduleType, value,  "TimeSeriesScheduleType", 7);
			} 
		}	
		[EntityAttribute(8, EntityAttributeState.Mandatory, EntityAttributeType.Class, EntityAttributeType.None, -1, -1, 14)]
		public IfcTimeSeries @TimeSeries 
		{ 
			get 
			{
				if(ActivationStatus != ActivationStatus.NotActivated) return _timeSeries;
				((IPersistEntity)this).Activate(false);
				return _timeSeries;
			} 
			set
			{
				SetValue( v =>  _timeSeries = v, _timeSeries, value,  "TimeSeries", 8);
			} 
		}	
		#endregion





		#region IPersist implementation
		public  override void Parse(int propIndex, IPropertyValue value, int[] nestedIndex)
		{
			switch (propIndex)
			{
				case 0: 
				case 1: 
				case 2: 
				case 3: 
				case 4: 
					base.Parse(propIndex, value, nestedIndex); 
					return;
				case 5: 
					_applicableDates.InternalAdd((IfcDateTimeSelect)value.EntityVal);
					return;
				case 6: 
                    _timeSeriesScheduleType = (IfcTimeSeriesScheduleTypeEnum) System.Enum.Parse(typeof (IfcTimeSeriesScheduleTypeEnum), value.EnumVal, true);
					return;
				case 7: 
					_timeSeries = (IfcTimeSeries)(value.EntityVal);
					return;
				default:
					throw new XbimParserException(string.Format("Attribute index {0} is out of range for {1}", propIndex + 1, GetType().Name.ToUpper()));
			}
		}
		#endregion

		#region Equality comparers and operators
        public bool Equals(@IfcTimeSeriesSchedule other)
	    {
	        return this == other;
	    }

	    public override bool Equals(object obj)
        {
            // Check for null
            if (obj == null) return false;

            // Check for type
            if (GetType() != obj.GetType()) return false;

            // Cast as @IfcTimeSeriesSchedule
            var root = (@IfcTimeSeriesSchedule)obj;
            return this == root;
        }
        public override int GetHashCode()
        {
            //good enough as most entities will be in collections of  only one model, equals distinguishes for model
            return EntityLabel.GetHashCode(); 
        }

        public static bool operator ==(@IfcTimeSeriesSchedule left, @IfcTimeSeriesSchedule right)
        {
            // If both are null, or both are same instance, return true.
            if (ReferenceEquals(left, right))
                return true;

            // If one is null, but not both, return false.
            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
                return false;

            return (left.EntityLabel == right.EntityLabel) && (left.Model == right.Model);

        }

        public static bool operator !=(@IfcTimeSeriesSchedule left, @IfcTimeSeriesSchedule right)
        {
            return !(left == right);
        }

        #endregion

		#region Custom code (will survive code regeneration)
		//## Custom code
		//##
		#endregion
	}
}