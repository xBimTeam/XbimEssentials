// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.ConstraintResource
{
	public partial class @IfcConstraint : IIfcConstraint
	{
		Ifc4.MeasureResource.IfcLabel IIfcConstraint.Name 
		{ 
			get
			{
				return new Ifc4.MeasureResource.IfcLabel(Name);
			} 
		}
		Ifc4.MeasureResource.IfcText? IIfcConstraint.Description 
		{ 
			get
			{
				if (!Description.HasValue) return null;
				return new Ifc4.MeasureResource.IfcText(Description.Value);
			} 
		}
		Ifc4.Interfaces.IfcConstraintEnum IIfcConstraint.ConstraintGrade 
		{ 
			get
			{
				switch (ConstraintGrade)
				{
					case IfcConstraintEnum.HARD:
						return Ifc4.Interfaces.IfcConstraintEnum.HARD;
					
					case IfcConstraintEnum.SOFT:
						return Ifc4.Interfaces.IfcConstraintEnum.SOFT;
					
					case IfcConstraintEnum.ADVISORY:
						return Ifc4.Interfaces.IfcConstraintEnum.ADVISORY;
					
					case IfcConstraintEnum.USERDEFINED:
						return Ifc4.Interfaces.IfcConstraintEnum.USERDEFINED;
					
					case IfcConstraintEnum.NOTDEFINED:
						return Ifc4.Interfaces.IfcConstraintEnum.NOTDEFINED;
					
					
					default:
						throw new System.ArgumentOutOfRangeException();
				}
			} 
		}
		Ifc4.MeasureResource.IfcLabel? IIfcConstraint.ConstraintSource 
		{ 
			get
			{
				if (!ConstraintSource.HasValue) return null;
				return new Ifc4.MeasureResource.IfcLabel(ConstraintSource.Value);
			} 
		}
		IIfcActorSelect IIfcConstraint.CreatingActor 
		{ 
			get
			{
				if (CreatingActor == null) return null;
				var ifcorganization = CreatingActor as ActorResource.IfcOrganization;
				if (ifcorganization != null) 
					return ifcorganization;
				var ifcperson = CreatingActor as ActorResource.IfcPerson;
				if (ifcperson != null) 
					return ifcperson;
				var ifcpersonandorganization = CreatingActor as ActorResource.IfcPersonAndOrganization;
				if (ifcpersonandorganization != null) 
					return ifcpersonandorganization;
				return null;
			} 
		}
		Ifc4.DateTimeResource.IfcDateTime? IIfcConstraint.CreationTime 
		{ 
			get
			{
				//## Handle return of CreationTime for which no match was found
			    return CreationTime == null
			        ? null
			        : new Ifc4.DateTimeResource.IfcDateTime(CreationTime.ToISODateTimeString());
			    //##
			} 
		}
		Ifc4.MeasureResource.IfcLabel? IIfcConstraint.UserDefinedGrade 
		{ 
			get
			{
				if (!UserDefinedGrade.HasValue) return null;
				return new Ifc4.MeasureResource.IfcLabel(UserDefinedGrade.Value);
			} 
		}
		IEnumerable<IIfcExternalReferenceRelationship> IIfcConstraint.HasExternalReferences 
		{ 
			get
			{
				return Model.Instances.Where<IIfcExternalReferenceRelationship>(e => e.RelatedResourceObjects != null &&  e.RelatedResourceObjects.Contains(this), "RelatedResourceObjects", this);
			} 
		}
		IEnumerable<IIfcResourceConstraintRelationship> IIfcConstraint.PropertiesForConstraint 
		{ 
			get
			{
				return Model.Instances.Where<IIfcResourceConstraintRelationship>(e => (e.RelatingConstraint as IfcConstraint) == this, "RelatingConstraint", this);
			} 
		}
	//## Custom code
	//##
	}
}