// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.GeometryResource
{
	public partial class @IfcCompositeCurveSegment : IIfcCompositeCurveSegment
	{
		Ifc4.Interfaces.IfcTransitionCode IIfcCompositeCurveSegment.Transition 
		{ 
			get
			{
				switch (Transition)
				{
					case IfcTransitionCode.DISCONTINUOUS:
						return Ifc4.Interfaces.IfcTransitionCode.DISCONTINUOUS;
					
					case IfcTransitionCode.CONTINUOUS:
						return Ifc4.Interfaces.IfcTransitionCode.CONTINUOUS;
					
					case IfcTransitionCode.CONTSAMEGRADIENT:
						return Ifc4.Interfaces.IfcTransitionCode.CONTSAMEGRADIENT;
					
					case IfcTransitionCode.CONTSAMEGRADIENTSAMECURVATURE:
						return Ifc4.Interfaces.IfcTransitionCode.CONTSAMEGRADIENTSAMECURVATURE;
					
					
					default:
						throw new System.ArgumentOutOfRangeException();
				}
			} 
		}
		Ifc4.MeasureResource.IfcBoolean IIfcCompositeCurveSegment.SameSense 
		{ 
			get
			{
				//## Handle return of SameSense for which no match was found
                return new Ifc4.MeasureResource.IfcBoolean(SameSense);
				//##
			} 
		}
		IIfcCurve IIfcCompositeCurveSegment.ParentCurve 
		{ 
			get
			{
				return ParentCurve;
			} 
		}
		IEnumerable<IIfcCompositeCurve> IIfcCompositeCurveSegment.UsingCurves 
		{ 
			get
			{
				return Model.Instances.Where<IIfcCompositeCurve>(e => e.Segments != null &&  e.Segments.Contains(this), "Segments", this);
			} 
		}
		Ifc4.GeometryResource.IfcDimensionCount IIfcCompositeCurveSegment.Dim 
		{
			get 
			{
				return new Ifc4.GeometryResource.IfcDimensionCount(Dim);
			}
		}

	//## Custom code
	//##
	}
}