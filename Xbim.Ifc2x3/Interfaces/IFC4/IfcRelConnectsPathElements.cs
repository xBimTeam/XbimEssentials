// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.SharedBldgElements
{
	public partial class @IfcRelConnectsPathElements : IIfcRelConnectsPathElements
	{
		IEnumerable<Xbim.Ifc4.MeasureResource.IfcInteger> IIfcRelConnectsPathElements.RelatingPriorities 
		{ 
			get
			{
				//## Handle return of RelatingPriorities for which no match was found
			    return RelatingPriorities.Select(priority => (Xbim.Ifc4.MeasureResource.IfcInteger) priority);
			    //##
			} 
		}
		IEnumerable<Xbim.Ifc4.MeasureResource.IfcInteger> IIfcRelConnectsPathElements.RelatedPriorities 
		{ 
			get
			{
				//## Handle return of RelatedPriorities for which no match was found
			    return RelatedPriorities.Select(priority => (Xbim.Ifc4.MeasureResource.IfcInteger) priority);
			    //##
			} 
		}
		Ifc4.Interfaces.IfcConnectionTypeEnum IIfcRelConnectsPathElements.RelatedConnectionType 
		{ 
			get
			{
				switch (RelatedConnectionType)
				{
					case IfcConnectionTypeEnum.ATPATH:
						return Ifc4.Interfaces.IfcConnectionTypeEnum.ATPATH;
					
					case IfcConnectionTypeEnum.ATSTART:
						return Ifc4.Interfaces.IfcConnectionTypeEnum.ATSTART;
					
					case IfcConnectionTypeEnum.ATEND:
						return Ifc4.Interfaces.IfcConnectionTypeEnum.ATEND;
					
					case IfcConnectionTypeEnum.NOTDEFINED:
						return Ifc4.Interfaces.IfcConnectionTypeEnum.NOTDEFINED;
					
					
					default:
						throw new System.ArgumentOutOfRangeException();
				}
			} 
			set
			{
				switch (value)
				{
					case Ifc4.Interfaces.IfcConnectionTypeEnum.ATPATH:
						RelatedConnectionType = IfcConnectionTypeEnum.ATPATH;
						return;
					
					case Ifc4.Interfaces.IfcConnectionTypeEnum.ATSTART:
						RelatedConnectionType = IfcConnectionTypeEnum.ATSTART;
						return;
					
					case Ifc4.Interfaces.IfcConnectionTypeEnum.ATEND:
						RelatedConnectionType = IfcConnectionTypeEnum.ATEND;
						return;
					
					case Ifc4.Interfaces.IfcConnectionTypeEnum.NOTDEFINED:
						RelatedConnectionType = IfcConnectionTypeEnum.NOTDEFINED;
						return;
					
					
					default:
						throw new System.ArgumentOutOfRangeException();
				}
				
			}
		}
		Ifc4.Interfaces.IfcConnectionTypeEnum IIfcRelConnectsPathElements.RelatingConnectionType 
		{ 
			get
			{
				switch (RelatingConnectionType)
				{
					case IfcConnectionTypeEnum.ATPATH:
						return Ifc4.Interfaces.IfcConnectionTypeEnum.ATPATH;
					
					case IfcConnectionTypeEnum.ATSTART:
						return Ifc4.Interfaces.IfcConnectionTypeEnum.ATSTART;
					
					case IfcConnectionTypeEnum.ATEND:
						return Ifc4.Interfaces.IfcConnectionTypeEnum.ATEND;
					
					case IfcConnectionTypeEnum.NOTDEFINED:
						return Ifc4.Interfaces.IfcConnectionTypeEnum.NOTDEFINED;
					
					
					default:
						throw new System.ArgumentOutOfRangeException();
				}
			} 
			set
			{
				switch (value)
				{
					case Ifc4.Interfaces.IfcConnectionTypeEnum.ATPATH:
						RelatingConnectionType = IfcConnectionTypeEnum.ATPATH;
						return;
					
					case Ifc4.Interfaces.IfcConnectionTypeEnum.ATSTART:
						RelatingConnectionType = IfcConnectionTypeEnum.ATSTART;
						return;
					
					case Ifc4.Interfaces.IfcConnectionTypeEnum.ATEND:
						RelatingConnectionType = IfcConnectionTypeEnum.ATEND;
						return;
					
					case Ifc4.Interfaces.IfcConnectionTypeEnum.NOTDEFINED:
						RelatingConnectionType = IfcConnectionTypeEnum.NOTDEFINED;
						return;
					
					
					default:
						throw new System.ArgumentOutOfRangeException();
				}
				
			}
		}
	//## Custom code
	//##
	}
}