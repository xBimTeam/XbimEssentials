// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.ConstraintResource
{
	public partial class @IfcObjective : IIfcObjective
	{
		IEnumerable<IIfcConstraint> IIfcObjective.BenchmarkValues 
		{ 
			get
			{
				//## Handle return of BenchmarkValues for which no match was found
				yield return BenchmarkValues;
				//##
			} 
		}

		private  Ifc4.Interfaces.IfcLogicalOperatorEnum? _logicalAggregator;

		Ifc4.Interfaces.IfcLogicalOperatorEnum? IIfcObjective.LogicalAggregator 
		{ 
			get
			{
				return _logicalAggregator;
			} 
			set
			{
				SetValue(v => _logicalAggregator = v, _logicalAggregator, value, "LogicalAggregator", byte.MaxValue);
				
			}
		}
		Ifc4.Interfaces.IfcObjectiveEnum IIfcObjective.ObjectiveQualifier 
		{ 
			get
			{
				switch (ObjectiveQualifier)
				{
					case IfcObjectiveEnum.CODECOMPLIANCE:
						return Ifc4.Interfaces.IfcObjectiveEnum.CODECOMPLIANCE;
					
					case IfcObjectiveEnum.DESIGNINTENT:
						return Ifc4.Interfaces.IfcObjectiveEnum.DESIGNINTENT;
					
					case IfcObjectiveEnum.HEALTHANDSAFETY:
						return Ifc4.Interfaces.IfcObjectiveEnum.HEALTHANDSAFETY;
					
					case IfcObjectiveEnum.REQUIREMENT:
						return Ifc4.Interfaces.IfcObjectiveEnum.REQUIREMENT;
					
					case IfcObjectiveEnum.SPECIFICATION:
						return Ifc4.Interfaces.IfcObjectiveEnum.SPECIFICATION;
					
					case IfcObjectiveEnum.TRIGGERCONDITION:
						return Ifc4.Interfaces.IfcObjectiveEnum.TRIGGERCONDITION;
					
					case IfcObjectiveEnum.USERDEFINED:
						//## Optional custom handling of ObjectiveQualifier == .USERDEFINED. 
						//##
						return Ifc4.Interfaces.IfcObjectiveEnum.USERDEFINED;
					
					case IfcObjectiveEnum.NOTDEFINED:
						return Ifc4.Interfaces.IfcObjectiveEnum.NOTDEFINED;
					
					
					default:
						throw new System.ArgumentOutOfRangeException();
				}
			} 
			set
			{
				switch (value)
				{
					case Ifc4.Interfaces.IfcObjectiveEnum.CODECOMPLIANCE:
						ObjectiveQualifier = IfcObjectiveEnum.CODECOMPLIANCE;
						return;
					
					case Ifc4.Interfaces.IfcObjectiveEnum.CODEWAIVER:
						//## Handle setting of CODEWAIVER member from IfcObjectiveEnum in property ObjectiveQualifier
						//TODO: Handle setting of CODEWAIVER member from IfcObjectiveEnum in property ObjectiveQualifier
						throw new System.NotImplementedException();
						//##
										
					case Ifc4.Interfaces.IfcObjectiveEnum.DESIGNINTENT:
						ObjectiveQualifier = IfcObjectiveEnum.DESIGNINTENT;
						return;
					
					case Ifc4.Interfaces.IfcObjectiveEnum.EXTERNAL:
						//## Handle setting of EXTERNAL member from IfcObjectiveEnum in property ObjectiveQualifier
						//TODO: Handle setting of EXTERNAL member from IfcObjectiveEnum in property ObjectiveQualifier
						throw new System.NotImplementedException();
						//##
										
					case Ifc4.Interfaces.IfcObjectiveEnum.HEALTHANDSAFETY:
						ObjectiveQualifier = IfcObjectiveEnum.HEALTHANDSAFETY;
						return;
					
					case Ifc4.Interfaces.IfcObjectiveEnum.MERGECONFLICT:
						//## Handle setting of MERGECONFLICT member from IfcObjectiveEnum in property ObjectiveQualifier
						//TODO: Handle setting of MERGECONFLICT member from IfcObjectiveEnum in property ObjectiveQualifier
						throw new System.NotImplementedException();
						//##
										
					case Ifc4.Interfaces.IfcObjectiveEnum.MODELVIEW:
						//## Handle setting of MODELVIEW member from IfcObjectiveEnum in property ObjectiveQualifier
						//TODO: Handle setting of MODELVIEW member from IfcObjectiveEnum in property ObjectiveQualifier
						throw new System.NotImplementedException();
						//##
										
					case Ifc4.Interfaces.IfcObjectiveEnum.PARAMETER:
						//## Handle setting of PARAMETER member from IfcObjectiveEnum in property ObjectiveQualifier
						//TODO: Handle setting of PARAMETER member from IfcObjectiveEnum in property ObjectiveQualifier
						throw new System.NotImplementedException();
						//##
										
					case Ifc4.Interfaces.IfcObjectiveEnum.REQUIREMENT:
						ObjectiveQualifier = IfcObjectiveEnum.REQUIREMENT;
						return;
					
					case Ifc4.Interfaces.IfcObjectiveEnum.SPECIFICATION:
						ObjectiveQualifier = IfcObjectiveEnum.SPECIFICATION;
						return;
					
					case Ifc4.Interfaces.IfcObjectiveEnum.TRIGGERCONDITION:
						ObjectiveQualifier = IfcObjectiveEnum.TRIGGERCONDITION;
						return;
					
					case Ifc4.Interfaces.IfcObjectiveEnum.USERDEFINED:
						ObjectiveQualifier = IfcObjectiveEnum.USERDEFINED;
						return;
					
					case Ifc4.Interfaces.IfcObjectiveEnum.NOTDEFINED:
						ObjectiveQualifier = IfcObjectiveEnum.NOTDEFINED;
						return;
					
					
					default:
						throw new System.ArgumentOutOfRangeException();
				}
				
			}
		}
		Ifc4.MeasureResource.IfcLabel? IIfcObjective.UserDefinedQualifier 
		{ 
			get
			{
				if (!UserDefinedQualifier.HasValue) return null;
				return new Ifc4.MeasureResource.IfcLabel(UserDefinedQualifier.Value);
			} 
			set
			{
				UserDefinedQualifier = value.HasValue ? 
					new MeasureResource.IfcLabel(value.Value) :  
					 new MeasureResource.IfcLabel?() ;
				
			}
		}
	//## Custom code
	//##
	}
}