// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;
using Xbim.Common;

//## Custom using statements
//##

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc4x3.GeometryResource
{
	public partial class @IfcCompositeCurve : IIfcCompositeCurve
	{

		[CrossSchemaAttribute(typeof(IIfcCompositeCurve), 1)]
		IItemSet<IIfcCompositeCurveSegment> IIfcCompositeCurve.Segments 
		{ 
			get
			{
                //## Custom code - not auto generated
                var compCurveSegs = Segments.OfType<IIfcCompositeCurveSegment>();

                var list = new ItemSet<IIfcCompositeCurveSegment>(this, 0, 1);
                foreach (var seg in compCurveSegs)
                {
                    list.InternalAdd(seg); // no transaction available
                }
                return new Common.Collections.ProxyItemSet<IIfcCompositeCurveSegment, IIfcCompositeCurveSegment>(list);
                //##
            }
        }

		[CrossSchemaAttribute(typeof(IIfcCompositeCurve), 2)]
		Ifc4.MeasureResource.IfcLogical IIfcCompositeCurve.SelfIntersect 
		{ 
			get
			{
				return new Ifc4.MeasureResource.IfcLogical(SelfIntersect);
			} 
			set
			{
				SelfIntersect = new MeasureResource.IfcLogical(value);
				
			}
		}
		Ifc4.MeasureResource.IfcInteger IIfcCompositeCurve.NSegments 
		{
			get 
			{
				return new Ifc4.MeasureResource.IfcInteger(NSegments);
			}
		}

		Ifc4.MeasureResource.IfcLogical IIfcCompositeCurve.ClosedCurve 
		{
			get 
			{
				return new Ifc4.MeasureResource.IfcLogical(ClosedCurve);
			}
		}

	//## Custom code
	//##
	}
}